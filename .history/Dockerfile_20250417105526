FROM php:8.2-fpm

WORKDIR /var/www

# Install system packages
RUN apt-get update && apt-get install -y \
    nginx supervisor curl git unzip zip \
    libpng-dev libjpeg-dev libfreetype6-dev \
    libonig-dev libxml2-dev libzip-dev libcurl4-openssl-dev \
    libssl-dev libreadline-dev libicu-dev libxslt1-dev \
    mariadb-client nodejs npm gettext-base iproute2 net-tools

# Install PHP extensions
RUN pecl install redis && \
    docker-php-ext-enable redis && \
    docker-php-ext-install pdo pdo_mysql mbstring exif pcntl bcmath gd zip intl

# Add this before PHP-FPM configuration
RUN mkdir -p /var/run/php && \
    chown -R www-data:www-data /var/run/php

# Configure PHP-FPM and clean Nginx configs
RUN sed -i "s|^listen = .*|listen = /var/run/php/php-fpm.sock|" /usr/local/etc/php-fpm.d/www.conf && \
    sed -i "s/;listen.owner/listen.owner/" /usr/local/etc/php-fpm.d/www.conf && \
    sed -i "s/;listen.group/listen.group/" /usr/local/etc/php-fpm.d/www.conf && \
    sed -i "s/;listen.mode = 0660/listen.mode = 0660/" /usr/local/etc/php-fpm.d/www.conf && \
    echo "php_admin_flag[log_errors] = on" >> /usr/local/etc/php-fpm.d/www.conf && \
    echo "php_admin_value[error_log] = /var/log/php-fpm.log" >> /usr/local/etc/php-fpm.d/www.conf

# Install Composer and copy app
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
COPY . .

# Install dependencies and build assets
RUN composer install --no-dev --optimize-autoloader
RUN npm install && npm run build

# Set up directories and permissions
RUN mkdir -p /var/log/nginx && \
    touch /var/log/nginx/error.log && \
    chown -R www-data:www-data /var/log/nginx && \
    mkdir -p storage/framework/{cache,sessions,views} storage/app/public bootstrap/cache && \
    chown -R www-data:www-data /var/www && \
    chmod -R 775 storage bootstrap/cache

# Laravel optimizations
RUN php artisan config:clear --no-interaction && \
    php artisan route:clear --no-interaction && \
    php artisan view:clear --no-interaction && \
    rm -rf public/storage || true && \
    php artisan storage:link --no-interaction && \
    php artisan package:discover --no-interaction && \
    php artisan vendor:publish --force --tag=livewire:assets --no-interaction

# Filament assets
USER www-data
RUN php artisan filament:assets --no-interaction
USER root

# Copy config files
COPY laravel.template /etc/nginx/sites-available/laravel.template
COPY supervisord.conf /etc/supervisor/conf.d/supervisord.conf
COPY startup.sh /usr/local/bin/
RUN chmod +x /usr/local/bin/startup.sh

CMD ["/usr/local/bin/startup.sh"]